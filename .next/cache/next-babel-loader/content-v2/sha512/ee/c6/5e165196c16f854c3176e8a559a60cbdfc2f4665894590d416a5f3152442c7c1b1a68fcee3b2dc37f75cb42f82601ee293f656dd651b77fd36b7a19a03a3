{"ast":null,"code":"var _jsxFileName = \"/home/delf/todos/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useState } from \"react\";\nconst {\n  0: items,\n  1: setItems\n} = useState([\"hello\", \"world\"]);\nconst {\n  0: newTodo,\n  1: setNewTodo\n} = useState(\"\");\n\nconst addTodo = newTodo => {\n  setItems([...items, newTodo]);\n};\n\nconst Index = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"My Todo App\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      addTodo(newTodo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: newTodo,\n    onChange: e => setNewTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Add\"))), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, items.map((n, i) => __jsx(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 49\n    }\n  }), n)))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/delf/todos/pages/index.tsx"],"names":["React","useState","items","setItems","newTodo","setNewTodo","addTodo","Index","e","preventDefault","target","value","map","n","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAM;AAAA,KAACC,KAAD;AAAA,KAAQC;AAAR,IAAoBF,QAAQ,CAAW,CAAC,OAAD,EAAS,OAAT,CAAX,CAAlC;AACA,MAAM;AAAA,KAACG,OAAD;AAAA,KAAUC;AAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAIA,MAAMK,OAAO,GAAIF,OAAD,IAAqB;AACjCD,EAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAAR;AAEH,CAHD;;AAMA,MAAMG,KAAK,GAAG,MAAM;AAEhB,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,OAAO,CAACF,OAAD,CAAP;AAGK,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEA,OAA1B;AAAmC,IAAA,QAAQ,EAAEI,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPJ,CADJ,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,GAAN,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,EAAsCD,CAAtC,CAAnB,CADL,CADJ,CAbJ,CADA;AAqBgB,CAvBpB;;AAyBA,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nconst [items, setItems] = useState<string[]>([\"hello\",\"world\"]);\nconst [newTodo, setNewTodo] = useState(\"\");\n\n\n\nconst addTodo = (newTodo: string) => {\n    setItems([...items, newTodo]);\n\n};\n\n\nconst Index = () => {\n    \n    return (\n    <div>\n        <header>My Todo App</header>\n        <div>\n            <form onSubmit={(e) => {\n                e.preventDefault();\n                addTodo(newTodo);\n                    \n                    \n                    }}>\n                <input type=\"text\" value={newTodo} onChange={e => setNewTodo(e.target.value)}/>\n                <button>Add</button>\n            </form>\n        </div>\n        <main>\n            <ul>\n                {items.map((n,i) => <li key={i}><input type=\"checkbox\" />{n}</li>)}\n            </ul>\n        </main>    \n    </div>\n\n           )       }\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}